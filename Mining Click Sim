getgenv().mine = true getgenv().rebirth = true getgenv().buyegg = true getgenv().autopick = true   function dotap()     spawn(function()          while mine == true do             if not getgenv().mine then break end game:GetService("ReplicatedStorage").Remotes.Click:InvokeServer()         task.wait()         game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)         task.wait()         game:GetService('VirtualInputManager'):SendKeyEvent(false, "E", false, game)         game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)         task.wait()         game:GetService('VirtualInputManager'):SendKeyEvent(false, "E", false, game)         end     end)  end       local localPlayer = game.Players.LocalPlayer  local coins = localPlayer:GetAttribute("Coins")  function Autorebirth()     spawn(function()         while true do wait()              if getgenv().rebirth then             if coins >= rebirthAmt then                  game.ReplicatedStorage.Remotes:WaitForChild("Rebirth"):FireServer();              end         end                   end     end) end function autoegg(selectedEgg)     spawn(function()               while wait() do                 if not getgenv().buyegg then break end local args = {     [1] = selectedEgg,     [2] = 1 }  game:GetService("ReplicatedStorage").Remotes.buyEgg:InvokeServer(unpack(args))              end         end)     end  local localPlayer = game.Players.LocalPlayer local coins = localPlayer:GetAttribute("Coins") local remotes = game.ReplicatedStorage.Remotes local module = require(game:GetService("ReplicatedStorage").Modules.pickaxesModule) local inventory = game.HttpService:JSONDecode(localPlayer:GetAttribute("inventoryOfPicks"))  function autopick()     spawn(function()        while autopick == true do           for i,v in pairs(module.picks) do              if coins >= v.Cost then                 if not inventory[i] then                 remotes.BuyPickaxe:InvokeServer(i)                 end              end           end       end    end)  end      function GetCurrentPlayerPOS()         local plyr = game.Players.LocalPlayer             if plyr.Character then             return plyr.Character.HumanoidRootPart.Position             end            return false         end function Teleportto(PlaceCFrame)         local plyr = game.Players.LocalPlayer         if plyr.Character then         plyr.Character.HumanoidRootPart.CFrame = PlaceCFrame         end      end function teleportWorld(world)     if game:GetService("Workspace").TeleportBricks:FindFirstChild(world) then        Teleportto(game:GetService("Workspace").TeleportBricks[world].CFrame)         end     end  local Humanoid = game.Players.LocalPlayer.Character.HumanoidRootPart      local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()      local w = library:CreateWindow("Mining Sim") -- Creates the window          local b = w:CreateFolder("Auto Farm")          local c = w:CreateFolder("Pets")          local d = w:CreateFolder("Teleports")          b:Toggle("Auto Mine",function(bool)         getgenv().mine = bool         print("Auto mine is: ", bool)             if bool then                 dotap()             end         end)          b:Toggle("Auto Rebirth",function(bool)         getgenv().rebirth = bool         print("Auto Rebirth is: ", bool)             if bool then                 Autorebirth()             end         end)              local selectedEgg          c:Dropdown("Egg",{"Starter Egg","Spotted Egg","Floral Egg","Desert Egg","Snow Egg","Cave Egg","Ocean Egg","Jungle Egg","Volcano Egg","Space Egg","Undead Egg","Heavenly Egg","Devil Egg"},true,function(value) --true/false, replaces the current title "Dropdown" with the option that t              selectedEgg = value             print(value)         end)         c:Toggle("Auto Buy Egg",function(bool)             getgenv().buyegg = bool             print("Auto Egg is: ", bool)                 if bool then                     autoegg(selectedEgg)                 end             end)                      b:Toggle("Auto Pickaxe",function(bool)                 getgenv().autopick = bool                 print("Auto Pickaxe is: ", bool)                     if bool then                         autopick()                     end                 end)                          d:Button("Desert",function()                 teleportWorld("Desert")             end)                  d:Button("Snow",function()                 teleportWorld("Snow")             end)                  d:Button("Cave",function()                 teleportWorld("Cave")             end)              d:Button("Ocean",function()                 teleportWorld("Ocean")             end)              d:Button("Jungle",function()                 teleportWorld("Jungle")             end)              d:Button("Volcano",function()                 teleportWorld("Volcano")             end)              d:Button("Space",function()                 teleportWorld("Space")             end)              d:Button("Undead Forest",function()                 teleportWorld("Undead Forest")             end)              d:Button("Heaven",function()                 teleportWorld("Heaven")             end)                          d:Button("Hell Dungeon",function()                 teleportWorld("Hell Dungeon")             end)              d:Button("Jurassic",function()                 Humanoid.CFrame = CFrame.new(470.309, 68.1973, -4192.3)             end)                          d:Button("Atlantis",function()                 Humanoid.CFrame = CFrame.new(470.611, 64.0973, -3994.0)             end)                          d:Button("Egypt",function()                 Humanoid.CFrame = CFrame.new(470.611, 64.0973, -3814.0)             end)              d:Button("Olympus",function()                 Humanoid.CFrame = CFrame.new(470.611, 64.0973, -3639.8)             end)              d:Button("Goku City",function()                 Humanoid.CFrame = CFrame.new(123.566, 89.9549, 296.108)             end)              d:Button("Shinobi Village",function()                 Humanoid.CFrame = CFrame.new(123.566, 89.9549, 492.108)             end)              d:Button("Pirate City",function()                 Humanoid.CFrame = CFrame.new(123.566, 89.9549, 703.608)             end)              d:Button("Demon District",function()                 Humanoid.CFrame = CFrame.new(123.566, 89.9549, 890.608)             end)              d:Button("Titan City",function()                 Humanoid.CFrame = CFrame.new(123.566, 89.9549, 1093.61)             end)              d:Button("Tokyo",function()                 Humanoid.CFrame = CFrame.new(123.566, 89.9549, 1335.0)             end)              d:Button("Hero Academia",function()                 Humanoid.CFrame = CFrame.new(123.566, 89.9549, 1547.21)             end)              d:Button("Hunter Palace",function()                 Humanoid.CFrame = CFrame.new(123.566, 89.9549, 1735.21)             end)              d:Button("Rick N Morty",function()                 Humanoid.CFrame = CFrame.new(1917.43, 86.9542, -349.79)             end)              d:Button("Teen Titan",function()                 Humanoid.CFrame = CFrame.new(1917.43, 86.9542, -159.79)             end)     b:DestroyGui()
